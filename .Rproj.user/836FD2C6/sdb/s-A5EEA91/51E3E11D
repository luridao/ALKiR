{
    "contents" : "# ## ----- READ-IN fleets to borrow weights ----- ##\n# cat(\"Inntasta veida\", readline(\"Inntasta veida (press enter if no value): \"), file=\"new_veida_obj.in\", sep=\"\\n\")\n# new_veida_obj <- scan(\"new_veida_obj.in\", skip = 1, quiet= TRUE)\n\nif (length(new_veida_obj)==0) new_veida_obj=NULL\n\nresFun <- function(alk_ald_obj, veida_obj, new_veida_obj = new_veida_obj)\n{\nald_matad <- alk_ald_obj[[1]]['Sum', ac(ages)]\ntot_ml    <- alk_ald_obj[[1]][\"tot.mL\", 1]\t         # total mean-length from 'aldFun'\ntot_mw    <- alk_ald_obj[[1]][\"tot.mW\", 1]\t         # total mean-weight from 'aldFun'\nald_pa    <- alk_ald_obj[[1]][\"pA\", ac(ages)] # proportion of catch by age from 'aldFun'\nald_mw    <- alk_ald_obj[[1]][\"mW\", ac(ages)] # mean-weight by age from 'aldFun'\nald_ml    <- alk_ald_obj[[1]][\"mL\", ac(ages)] # mean-length by age from 'aldFun'\n\n# ---------------- Catch numbers -----------\nCy\t\t\t<- veida_obj / tot_mw\t\n# ---------------- Catch numbers-at-age ----\nCa\t\t\t<- Cy * ald_pa * 1000\t\n# --- Catch (in kg) corresponding to the catch-numbers ---\nroknad_veida\t<- Ca * ald_mw\t\t\n\n# --- scale catch-numbers if new catch data are available ---\nif (!is.null(new_veida_obj))\n{\nCa              <- Ca * (new_veida_obj / veida_obj)\t#=> catch-numbers-at-age\nroknad_veida    <- Ca * ald_mw\t\t\t\t#=> roknad veida\n}\n\n# ------------ all in one data frame ------------------------\nurslitid <- data.frame(aldur       = ages\n                    , tal_matad    = t(ald_matad)\n                    , tal_fiskad   = t(Ca)\n                    , midal_longd  = t(ald_ml)\n                    , midal_vekt   = t(ald_mw)\n                    , roknad_veida = t(roknad_veida))\n\ncolnames(urslitid) <- c('aldur', 'tal_matad', 'tal_fiskad', 'midal_longd', 'midal_vekt', 'roknad_veida')\n\n# pretty printing\nurslitid[is.na(urslitid)]  <- 0\nurslitid[,'tal_matad']     <- round(urslitid[,'tal_matad'],    0)\nurslitid[,'midal_longd']   <- round(urslitid[,'midal_longd'],  2)\nurslitid[,'midal_vekt']    <- round(urslitid[,'midal_vekt'],   3)\nurslitid[,'tal_fiskad']    <- round(urslitid[,'tal_fiskad'],    0)\nurslitid[,'roknad_veida']  <- round(urslitid[,'roknad_veida'], 0)\n\n# Sum-line at the bottom of the final table \"urslitid\"\nbot.line                <- apply(urslitid, 2, sum)\t\t\nbot.line['aldur']       <- 99\nbot.line['midal_longd'] <- round(tot_ml, 2)\nbot.line['midal_vekt']  <- round(tot_mw/1000, 3)\n\nurslitid <- rbind(urslitid, bot.line)\n\n# pretty printing for the bottom line\nind                     <- urslitid[,'aldur'] == 99\nurslitid[ind, 'aldur']  <- \"Sum\"\n\n# ------------------ start SMOOTH  ------------------------------- #\n\nald.j_matad <- alk_ald_obj[[2]]['Sum', ac(ages)]\ntot.j_ml    <- alk_ald_obj[[2]][\"tot.mL\", 1]\t         # total mean-length from 'aldFun'\ntot.j_mw    <- alk_ald_obj[[2]][\"tot.mW\", 1]\t         # total mean-weight from 'aldFun'\nald.j_pa    <- alk_ald_obj[[2]][\"pA\", ac(ages)] # proportion of catch by age from 'aldFun'\nald.j_mw    <- alk_ald_obj[[2]][\"mW\", ac(ages)] # mean-weight by age from 'aldFun'\nald.j_ml    <- alk_ald_obj[[2]][\"mL\", ac(ages)] # mean-length by age from 'aldFun'\n\n# ---------------- Catch numbers -----------\nCy.j\t\t\t<- veida_obj / tot.j_mw\t\n# ---------------- Catch numbers-at-age ----\nCa.j\t\t\t<- Cy.j * ald.j_pa * 1000\t\n# --- Catch (in kg) corresponding to the catch-numbers ---\nroknad_veida.j\t<- Ca.j * ald.j_mw\t\t\n\n# ------------ all in one data frame ------------------------\nurslitid.j <- data.frame(aldur       = ages\n                    , tal_matad    = t(ald.j_matad)\n                    , tal_fiskad   = t(Ca.j)\n                    , midal_longd  = t(ald.j_ml)\n                    , midal_vekt   = t(ald.j_mw)\n                    , roknad_veida = t(roknad_veida.j))\n\ncolnames(urslitid.j) <- c('aldur', 'tal_matad', 'tal_fiskad', 'midal_longd', 'midal_vekt', 'roknad_veida')\n\n# pretty printing\nurslitid.j[is.na(urslitid.j)]  <- 0\nurslitid.j[,'tal_matad']     <- round(urslitid.j[,'tal_matad'],    0)\nurslitid.j[,'midal_longd']   <- round(urslitid.j[,'midal_longd'],  2)\nurslitid.j[,'midal_vekt']    <- round(urslitid.j[,'midal_vekt'],   3)\nurslitid.j[,'tal_fiskad']    <- round(urslitid.j[,'tal_fiskad'],    0)\nurslitid.j[,'roknad_veida']  <- round(urslitid.j[,'roknad_veida'], 0)\n\n# Sum-line at the bottom of the final table \"urslitid\"\nbot.line.j                <- apply(urslitid.j, 2, sum)\t\t\nbot.line.j['aldur']       <- 99\nbot.line.j['midal_longd'] <- round(tot.j_ml, 2)\nbot.line.j['midal_vekt']  <- round(tot.j_mw/1000, 3)\n\nurslitid.j <- rbind(urslitid.j, bot.line.j)\n\n# pretty printing for the bottom line\nind.j                     <- urslitid.j[,'aldur'] == 99\nurslitid.j[ind.j, 'aldur']  <- \"Sum\"\n\n# ------------------ end SMOOTH  ------------------------------- #\n\n# both results (raw and smoothed) into a list \nurslitid.b <- list(URSLITID = urslitid, URSLITID.j = urslitid.j)\n\n# assign the result list to the workspace\nassign(paste(\"res\", Slag, manFun(Arma), paste(DriftV, collapse=\"_\"), sep=\"_\"), urslitid.b, env=.GlobalEnv)\ncat(\">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\",\"\\n\")\ncat(\" > Dato                : \", date(), '\\n' \n, \"> Slag                : \", Slag, '\\n'\n, \"> ?r                  : \", year_yvirlit, '\\n' \n, \"> Ti?arskei?          : \", gsub(\"_\", \"-\",toupper(manFun(Arma))), '\\n'\n, \"> Skipab?lk/-ar       : \", paste(DriftV, collapse=\" \"), '\\n'  \n, \"> Skipab?lk/-ar (l?n) : \", lanDrifts(), '\\n'\n, \"> ICES-?ki            : \", Oeki, '\\n')\ncat(\" <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\",\"\\n\\n\")\nreturn(urslitid.b)\n\n}\n\n#resFun(\n#aldFun(  alkFun(alkAll, lgdAll, Slag, Drift,  Arma, Oeki), Slag, Drift, Arma, Oeki ),\n#veidaFun(veidaDataAll         , Slag, DriftV, Arma, Oeki),\n#new_veida_obj = NULL )\n\n#--------------------------->  SLAG  DRIFT   DRIFT_AGE_BORROW  DRIFT_LGD_BORROW  DRIFT_VEKT_BORROW  ARMA  OEKI\n#--------------------------->  ^^^^  ^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^  ^^^^  ^^^^\ntmp1 <- alkFun(alkAll, lgdAll, Slag, Drift , Drift_Age_Borrow, Drift_Lgd_Borrow                   , Arma, Oeki)\ntmp2 <- aldFun(tmp1          , Slag, Drift , Drift_Age_Borrow, Drift_Lgd_Borrow, Drift_Vekt_Borrow, Arma, Oeki)\nif(dim(veidaDataAll)[1]!=0) \n\t{\n\t#print(\"\") \n\ttmp3 <- veidaFun(veidaDataAll, Slag, DriftV                                                       , Arma, Oeki)\n} else tmp3 <- veidaFun(new_veida_obj, Slag, DriftV                                                       , Arma, Oeki)\n\nsink(paste(\"res_\", Slag, \"_\", year_yvirlit, \"_\", manFun(Arma), \"_\", paste(DriftV, collapse=\"_\"), \".txt\", sep=\"\"))\nresFun(tmp2, tmp3, new_veida_obj = new_veida_obj)\nsink()\n\n#test <- noquote(paste(\"res_\", Slag,\"_\", year_yvirlit, \"_\", manFun(Arma), \"_\", paste(DriftV, collapse=\"_\"), \".txt\", sep=\"\"))\n\n#system(\"sed 's/[[:space:]][[:punct:]][[:punct:]][[:punct:]][[:punct:]][[:space:]][[:punct:]]TRUNCATED[[:punct:]]//g' test > foo1.txt\")\n\n\n",
    "created" : 1417440442053.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2768157622",
    "id" : "51E3E11D",
    "lastKnownWriteTime" : 1417447452,
    "path" : "~/Documents/D/ALKiR/resFun.R",
    "project_path" : "resFun.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}