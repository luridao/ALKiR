{
    "contents" : "## --------\tAPPLICATION TO COMPILE CATCH-AT-AGE NUMBERS -------------\n## The script starts out by asking for species & area & year to work on.\n##\n## After this a sampling-summary for the species % area & year is produced.\n## This sampling-summary is an overview of the length, weight, age and catch samples\n## of the species collected in the specified year and area in a monthly and \n## quarter fashion (saved in file \"Yvirlit.txt\")\n##\n## The next step is to calculate the age-length key to get the fleet-based catch-numbers (c@a)\n## With the help of the sampling-summary (\"Yvirlit.txt\") work can now start by typing in\n## the fleets and time period to calculate c@a. There is the possibility to borrow samples from\n## other more-extensive sampled fleets in cases where sampling in the particular period is sparse,\n## poor or non-existent at all. These fleet-based catch-numbers are saved in memory and in data files\n## having the following name convention: res_\"Species\"_\"period\"_\"fleet_number\"\n##             example 1 -----------> \"res_UP_may_aug_19_20_21\" <----------\n##             example 2 -----------> \"res_UP_jan_apr_16_17_18\" <----------\n##\n## Finally the user may opt for combining fleets over periods of time\n## A dialog will open in the local directory and the user must choose the files\n## to combine (e.g., files 'res_UP_may_aug_19_20_21' and 'res_UP_jan_apr_19_20_21'\n##\n## To terminate any process or stop altogether just press 'ESC'\n##\n\n#load(\"ALKiR.RData\")\nmyencoding = \"ISO-8859-14\"\n#bveida_data = FALSE\n\nsource('libraries.R'  , encoding = myencoding)\nsource('extraFuncs.R' , encoding = myencoding)\nsource('uid_pwd_script.R', encoding = myencoding)\n#source('gui_alk.R'    , encoding = myencoding)\n# source('correctInfo.R', encoding = myencoding)\n\n#  if(ora_uid==\"uid\" | ora_pwd==\"pwd\")\n#  {source('gui_alk.R'    , encoding = myencoding)}\n\n\n# while(coInfo == 'n')\n# {\n# source('gui_alk.R'    , encoding = myencoding)\n# source('correctInfo.R', encoding = myencoding)\n# }\n\n## ----- READ-IN 'Slag' ----- ##\n#slagQuestion <- readline(\"Sama fiskaslag? (y/n): \")\n#if(slagQuestion=='n') \n#{\ncat(\"Fiskaslag\", readline(\"\\nSet inn fiskaslag (up, to, hy ,,,) : \"), file=\"species.in\", sep=\"\\n\")\nSlag <- scan(\"species.in\", skip = 1, quiet= TRUE, what=\"character\")\nSlag <- toupper(Slag)\n#}\n\n#.- check whether the species is registered or not\nwhile(!(Slag %in% slag.list))\n{\ncat(\"\\n\", Slag,\"er ikki skr?set ? databasu\",\"\\n\\n\")\ncat(\"Fiskaslag\", readline(\"Set inn fiskaslag (up, to, hy ,,,) : \"), file=\"species.in\", sep=\"\\n\")\nSlag <- scan(\"species.in\", skip = 1, quiet= TRUE, what=\"character\")\nSlag <- toupper(Slag)\n}\n\n## ----- READ-IN 'Oeki' ----- ##\n#areaQuestion <- readline(\"Sama ICES-?ki? (y/n): \")\n#if(areaQuestion=='n') \n#{\ncat(\"ICES-?ki\", readline(\"Set inn ICES-?ki: \"), file=\"driftsOki.in\", sep=\"\\n\")\nOeki <- scan(\"driftsOki.in\", skip = 1, quiet= TRUE, what=\"character\")\nOeki <- toupper(Oeki)\nOeki1 <- noquote(paste(\"\\'\", noquote(paste(unlist(strsplit(Oeki, \",\")), collapse = \"\\',\\'\")), \"\\'\", sep=\"\"))\n\n#.- check whether the ICES-area is correct\nwhile(!(all(Oeki %in% c('VB1', 'VB2', 'IIA'))))\n{\nindexO <- Oeki %in% c('VB1', 'VB2', 'IIA')\ncat(\"\\n\", Oeki[!indexO],\"is not a faroese ICES-area. Re-enter ICES-?ki\",\"\\n\\n\")\ncat(\"ICES-?ki\", readline(\"Set inn ICES-?ki aftur: \"), file=\"driftsOki.in\", sep=\"\\n\")\nOeki <- scan(\"driftsOki.in\", skip = 1, quiet= TRUE, what=\"character\")\nOeki <- toupper(Oeki)\nOeki1 <- noquote(paste(\"\\'\", noquote(paste(unlist(strsplit(Oeki, \",\")), collapse = \"\\',\\'\")), \"\\'\", sep=\"\"))\n}\n#}\n\n## ----- MAKE sampling-summary ----- ##\nsummary <- readline(\"Ynskir t? yvirlitst?l? (y/n): \")\nif(summary=='y') \n{\ncat(\"?r fyri yvirlist?l\", readline(\"Set inn ?r fyri yvirlitst?l: \"), file=\"driftsArmaSmry.in\", sep=\"\\n\")\nyear_yvirlit <- scan(\"driftsArmaSmry.in\", skip = 1, quiet= TRUE)\n\n#.- check whether the year is registered or not\nwhile(!(year_yvirlit %in% year.list))\n{\ncat(\"\\n\", year_yvirlit, \"er ikki skr?set ? databasu\",\"\\n\\n\")\ncat(\"?r fyri yvirlist?l\", readline(\"Set inn ?r fyri yvirlitst?l: \"), file=\"driftsArmaSmry.in\", sep=\"\\n\")\nyear_yvirlit <- scan(\"driftsArmaSmry.in\", skip = 1, quiet= TRUE)\n}\n\n\nArmaS_yvirlit <- as.numeric(paste(substring(year_yvirlit, 3, 4), \"00\", sep=\"\"))\nArmaE_yvirlit <- as.numeric(paste(substring(year_yvirlit, 3, 4), \"13\", sep=\"\"))\n}\n\n########################################################################################\nsource('alkFun.R', encoding=myencoding)\t\t\t\t\t\t\t\t #### -----       ####\nsource('veidaFun.R', encoding=myencoding)\t\t\t\t\t\t\t\t ##### -----     #####\nsource('aldFun.R', encoding=myencoding)\t\t\t\t\t\t\t\t ###### -----   ######\nsource('lgdvektFun.R', encoding=myencoding)\t\t\t\t\t\t\t\t ####### ----- #######\n#source('resFun.R', encoding=myencoding)\t\t\t\t\t\t\t\t ####### ----- #######\nsource('extraFuncs.R', encoding=myencoding)\t\t\t\t\t\t\t\t ###### -----   ######\nsource('do_data_import.R', encoding=myencoding)\t\t\t\t\t\t\t ##### -----     #####\nsource('data_import.R', encoding=myencoding)\t\t\t\t\t\t\t\t #### -----       ####\n########################################################################################\n\n#.- make the sequence of year/month \nyymm <- paste(substring(year_yvirlit, 3, 4), formatC(seq(01, 12), width = 2, flag = \"0\"), sep=\"\")\n\nif(summary=='y') \n{\nsource('yvirlit.R', encoding=myencoding)\t\t\t\t\t\t\t\t \n}\n\ncat(\"\\n F?lur fyri yvirlitst?l gj?rdur og goymdur her: \",paste(getwd(),'/Yvirlit', \"_\", Slag, \"_\", year_yvirlit, \".txt\", sep=\"\"),'\\n\\n')\n\n####################\t\t\tSTART->SCRIPT TO LOOP \t\t######################\nrepeat{ # START repeat  ----------------------------------------------------------------\n\n## ----- READ-IN fleets ----- ##\nfleetQuestion <- readline(\"Sama skipab?lk/-ar? (y/n): \")\n\nif(fleetQuestion=='n') \n{\ncat(\"Skipab?lk/-ar\", readline(\"Set inn skipab?lk/-ar (set millumr?m millum skipabolkanumrini): \"), file=\"drifts.in\", sep=\"\\n\")\nDrift <- DriftV <- scan(\"drifts.in\", skip = 1, quiet= TRUE)\n\n#.- check whether the fleets are listed or not in the adopted list \"bdrift.lst\"\nwhile(!(all(Drift %in% unique(bdrift$drift))))\n{\nindexF <- Drift %in% unique(bdrift$drift)\ncat(\"\\n\", Drift[!indexF],\"is not listed as a fleet. Re-enter fleets\",\"\\n\\n\")\ncat(\"Skipab?lk/-ar\", readline(\"Set inn skipab?lk/-ar : \"), file=\"drifts.in\", sep=\"\\n\")\nDrift <- DriftV <- scan(\"drifts.in\", skip = 1, quiet= TRUE)\n}\n\n}\n\n## ----- READ-IN 'ArmaS' & 'ArmaE' ----- ##\ncat(paste(\"\", substring(months(as.Date(paste(\"01\", 1:12, year_yvirlit, sep=\"-\"))), 1, 3), sep=\" \")\t\t# YYMM\n, '\\n', paste(substring(year_yvirlit, 3, 4), formatC(seq(01, 12), width = 2, flag = \"0\"), sep=\"\"), '\\n')\t# example\n\ncat(\"Byrjanar og enda ?r og m?na? fyri ALK-ALD (YYMM)\", readline(\"Set inn byrjanar ?r og m?na? fyri ALK-ALD (YYMM): \"), file=\"driftsArma.in\", sep=\"\\n\")\nArmaS <- scan(\"driftsArma.in\", skip = 1, quiet= TRUE)\nArmaS <- formatC(ArmaS, width=4, flag=\"0\")\n\n#.- check whether the Start year&month is correct \nwhile(!(ArmaS %in% yymm))\n{\ncat(\"\\n\", ArmaS, \"is not a proper year&month. Re-enter byrjanar ?r og m?na?: \",\"\\n\\n\")\ncat(\"Byrjanar og enda ?r og m?na? fyri ALK-ALD (YYMM)\", readline(\"Set inn byrjanar ?r og m?na? fyri ALK-ALD (YYMM): \"), file=\"driftsArma.in\", sep=\"\\n\")\nArmaS <- scan(\"driftsArma.in\", skip = 1, quiet= TRUE)\nArmaS <- formatC(ArmaS, width=4, flag=\"0\")\n}\n\ncat(paste(\"\", substring(months(as.Date(paste(\"01\", 1:12, year_yvirlit, sep=\"-\"))), 1, 3), sep=\" \")\t\t# YYMM\n, '\\n', paste(substring(year_yvirlit, 3, 4), formatC(seq(01, 12), width = 2, flag = \"0\"), sep=\"\"), '\\n')\t# example\n\nArmaE <- readline(\"Set inn enda ?r og m?na? fyri ALK-ALD (YYMM): \")\n\n#.- check whether the End year&month is correct,  \nif(ArmaE %in% yymm)\n{\ncat(ArmaE, file=\"driftsArma.in\", sep=\" \", append=T)\n#ArmaE <- scan(\"driftsArma.in\", skip = 2, quiet= TRUE) \n\nArmaE <- scan(\"driftsArma.in\", skip = 2, quiet= TRUE)\nArmaE <- formatC(ArmaE, width=4, flag=\"0\")} else {\nwhile(!(ArmaE %in% yymm))\n{\ncat(\"\\n\", ArmaE, \"is not a proper year&month. Re-enter enda ?r og m?na?: \")\nArmaE <- readline()\nArmaE <- formatC(ArmaE, width=4, flag=\"0\")\n}\ncat(ArmaE, file=\"driftsArma.in\", sep=\" \", append=T)\nArmaE <- scan(\"driftsArma.in\", skip = 2, quiet= TRUE)\nArmaE <- formatC(ArmaE, width=4, flag=\"0\")\n}\n#cat(ArmaE, file=\"driftsArma.in\", sep=\" \", append=T)\n#ArmaE <- scan(\"driftsArma.in\", skip = 2, quiet= TRUE)\n\n## ----- MAKE 'Arma' ----- ##\nsource('armaFun.R', encoding=myencoding)\n\n## ----- READ-IN fleets to borrow lengths ----- ##\ncat(\"Skipab?lk/-ar, sum longdir eru l?ntar fr?\", readline(\"Set inn skipab?lk/-ar, sum longdir skulu l?nast fr? (skriva '0' um onki skal l?nast): \"), file=\"driftsLgd.in\", sep=\"\\n\")\nDrift_Lgd_Borrow <- scan(\"driftsLgd.in\", skip = 1, quiet= TRUE)\n\n## ----- READ-IN fleets to borrow weights ----- ##\ncat(\"Skipab?lk/-ar, sum vektir eru l?ntar fr?\", readline(\"Set inn skipab?lk/-ar, sum vektir skulu l?nast fr? (skriva '0' um onki skal l?nast): \"), file=\"driftsVkt.in\", sep=\"\\n\")\nDrift_Vekt_Borrow <- scan(\"driftsVkt.in\", skip = 1, quiet= TRUE)\n\n## ----- READ-IN fleets to borrow ages ----- ##\ncat(\"Skipab?lk/-ar, sum aldrar eru l?ntar fr?\", readline(\"Set inn skipab?lk/-ar, sum aldrar skulu l?nast fr?(skriva '0' um onki skal l?nast): \"), file=\"driftsAge.in\", sep=\"\\n\")\nDrift_Age_Borrow <- scan(\"driftsAge.in\", skip = 1, quiet= TRUE)\n\n## ----- PRINT INFORMATION on base-calculations ----- ##\n\ncat(\"\\n\",\"F?lur goymdur sum: \", paste(\"res\", Slag, manFun(Arma), paste(DriftV, collapse=\"_\"), sep=\"_\"),\"\\n\")\ncat(\"\\n\",\">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\")\ncat(\"\\n\", \"^ Slag                                      : \"  , Slag                , \"\\n\"\n        , \"^ Skipab?lk/-ar                             : \"  , Drift               , \"\\n\"\n        , \"^ Byrjanar ?r og m?na? fyri ALK/ALD         : \"  , ArmaS               , \"\\n\"\n        , \"^ Enda ?r og m?na? fyri ALK/ALD             : \"  , ArmaE               , \"\\n\"\n        , \"^ Skipab?lk/-ar, sum longdir eru l?ntar fr? : \"  , Drift_Lgd_Borrow    , \"\\n\"\n        , \"^ Skipab?lk/-ar, sum vektir eru l?ntar fr?  : \"  , Drift_Vekt_Borrow   , \"\\n\"\n        , \"^ Skipab?lk/-ar, sum aldrar eru l?ntar fr?  : \"  , Drift_Age_Borrow    , \"\\n\"\n        , \"^ ICES-?ki                                  : \"  , Oeki                , \"\\n\")\ncat(\"<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\",\"\\n\")\n\n## ----- READ-IN fleets to borrow weights ----- ##\ncat(\"Inntasta veida\", readline(\"Inntasta veida (press enter if no value): \"), file=\"new_veida_obj.in\", sep=\"\\n\")\nnew_veida_obj <- scan(\"new_veida_obj.in\", skip = 1, quiet= TRUE)\n\n## ----- CALCULATE the fleet-based C@A ----- ##\nsource('resFun.R', echo = TRUE, encoding=myencoding, max.deparse.length = 0)\n\nsource('spool_all.R', echo=T, encoding=myencoding, max.deparse.length = 0)\n\ncat(\"\\n\\n >>>>>>>>>>>>>>> Tr?st 'ESC' fyri at enda <<<<<<<<<<<<<<< \\n\")\ncat(\"\\n >>>>>>>>>>>>>>> Um t? ynskir at ste?ga og halda fram seinni, skriva: source(\\\"interactive.R\\\") <<<<< \\n\\n\")\n\n## ----- COMBINATE fleets ----- ##\ncat(\"\\n\",\"Vel f?lar sum starta vi? \\'res_\\', til d?mis \\'res_UP_jan_apr_19_20_21\\'\",\"\\n\")\n\nYesCombFlt <- readline(\"\\n Ynskir t? at leggja f?lar saman? (y/n): \")\n#Sys.sleep(1)\n#cat(\"\\n\",\"Vel f?lar sum starta vi? \\'res_\\', til d?mis res_UP_jan_apr_19_20_21\")\n\nif(YesCombFlt=='y') \n{\nres.files.choose  <- tk_choose.files()\nsource(\"combine_fleets_interactive.R\", echo=T, encoding=myencoding)\n}\n\n} # END of repeat ----------------------------------------------------------------------\n\n####################\t\t\tEND->SCRIPT TO LOOP \t\t######################\n\n\n\n\n\n\n\n",
    "created" : 1417181922735.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "73|1|80|0|\n156|1|161|0|\n170|1|175|42|\n177|1|181|0|\n",
    "hash" : "2967350463",
    "id" : "7AD3858A",
    "lastKnownWriteTime" : 1417444309,
    "path" : "~/Documents/D/ALKiR/interactive.R",
    "project_path" : "interactive.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}