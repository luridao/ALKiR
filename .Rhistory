the chosen period because of overlapping"
combine_fleets_interactive_check(file.names.ja.res)
combine_fleets_interactive_check(test)
combine_fleets_interactive_check(test1)
combine_fleets_interactive_check <- function(files_to_combine)
{
# - function to compare one element in a vector with the rest
#compare <- function(v) all(sapply(as.list(v[-1]), FUN=function(z) {identical(z, v[1])}))
slag_ar <- substring(files_to_combine, 5, 11)
period  <- substring(files_to_combine, 13, 19)
fleets  <- substring(files_to_combine, 21, 150) ; fleets <- gsub(".txt", "", fleets)
# - check if species and year coincide -> TRUE then it is OK
slag_ar_boolean <- compare(slag_ar)
# - check if time period (months) overlap -> TRUE then it is NOT OK
list_seq_months <- lapply(as.list(period), function(x) seq(mon_df[mon_df$mon_substr == substring(x, 1, 3), "mon_tal"]
, mon_df[mon_df$mon_substr == substring(x, 5, 7), "mon_tal"]))
period_boolean <- any(diff(sort(unlist(list_seq_months))) %in% 0)
# - check if fleets coincide -> TRUE then it is  OK
fleets_boolean <- compare(fleets)
# - both checks together
vector_boolean <- c("slag_ar_equal"=slag_ar_boolean, "fleets_equal"=fleets_boolean, "period_overlap"=period_boolean)
#return(vector_boolean)
# 	msg<-ifelse(vector_boolean[1] ,
# 		  ifelse(vector_boolean[2],
# 		  	  ifelse(vector_boolean[3],print("\nOverlap in period chosen\n"),print("")),
# 		  	   print("\nFleets are not identical\n")),print("\nSlag og/ella ár eru ikki eins\n"))
msg<-if(vector_boolean[1])
{
if(vector_boolean[2])
{
if(vector_boolean[3])
{
cat("\nOverlap in period chosen\n\n")
} else cat("OK")
} else cat("\nFleets are not identical\n\n")
} else source("combine_fleets_interactive_check_msg1.R")#cat("\nSlag og/ella ár eru ikki eins\n\n")
#return(msg)
}
comment(combine_fleets_interactive_check) <- "The first two components need to be TRUE. If third (period_overlap) is TRUE then need to check
the chosen period because of overlapping"
combine_fleets_interactive_check(file.names.ja.res)
combine_fleets_interactive_check(test)
combine_fleets_interactive_check(test1)
combine_fleets_interactive_check(file.names.ja.res)
combine_fleets_interactive_check(test1)
combine_fleets_interactive_check(test)
combine_fleets_interactive_check <- function(files_to_combine)
{
# - function to compare one element in a vector with the rest
#compare <- function(v) all(sapply(as.list(v[-1]), FUN=function(z) {identical(z, v[1])}))
slag_ar <- substring(files_to_combine, 5, 11)
period  <- substring(files_to_combine, 13, 19)
fleets  <- substring(files_to_combine, 21, 150) ; fleets <- gsub(".txt", "", fleets)
# - check if species and year coincide -> TRUE then it is OK
slag_ar_boolean <- compare(slag_ar)
# - check if time period (months) overlap -> TRUE then it is NOT OK
list_seq_months <- lapply(as.list(period), function(x) seq(mon_df[mon_df$mon_substr == substring(x, 1, 3), "mon_tal"]
, mon_df[mon_df$mon_substr == substring(x, 5, 7), "mon_tal"]))
period_boolean <- any(diff(sort(unlist(list_seq_months))) %in% 0)
# - check if fleets coincide -> TRUE then it is  OK
fleets_boolean <- compare(fleets)
# - both checks together
vector_boolean <- c("slag_ar_equal"=slag_ar_boolean, "fleets_equal"=fleets_boolean, "period_overlap"=period_boolean)
#return(vector_boolean)
# 	msg<-ifelse(vector_boolean[1] ,
# 		  ifelse(vector_boolean[2],
# 		  	  ifelse(vector_boolean[3],print("\nOverlap in period chosen\n"),print("")),
# 		  	   print("\nFleets are not identical\n")),print("\nSlag og/ella ár eru ikki eins\n"))
msg<-if(vector_boolean[1])
{
if(vector_boolean[2])
{
if(vector_boolean[3])
{
cat("\nOverlap in period chosen\n\n")
} else cat("OK")
} else source("combine_fleets_interactive_check_msg2.R")#cat("\nFleets are not identical\n\n")
} else source("combine_fleets_interactive_check_msg1.R")#cat("\nSlag og/ella ár eru ikki eins\n\n")
#return(msg)
}
comment(combine_fleets_interactive_check) <- "The first two components need to be TRUE. If third (period_overlap) is TRUE then need to check
the chosen period because of overlapping"
combine_fleets_interactive_check(file.names.ja.res)
combine_fleets_interactive_check(test)
combine_fleets_interactive_check(test1)
combine_fleets_interactive_check(test)
combine_fleets_interactive_check(test1)
combine_fleets_interactive_check(file.names.ja.res)
combine_fleets_interactive_check <- function(files_to_combine)
{
# - function to compare one element in a vector with the rest
#compare <- function(v) all(sapply(as.list(v[-1]), FUN=function(z) {identical(z, v[1])}))
slag_ar <- substring(files_to_combine, 5, 11)
period  <- substring(files_to_combine, 13, 19)
fleets  <- substring(files_to_combine, 21, 150) ; fleets <- gsub(".txt", "", fleets)
# - check if species and year coincide -> TRUE then it is OK
slag_ar_boolean <- compare(slag_ar)
# - check if time period (months) overlap -> TRUE then it is NOT OK
list_seq_months <- lapply(as.list(period), function(x) seq(mon_df[mon_df$mon_substr == substring(x, 1, 3), "mon_tal"]
, mon_df[mon_df$mon_substr == substring(x, 5, 7), "mon_tal"]))
period_boolean <- any(diff(sort(unlist(list_seq_months))) %in% 0)
# - check if fleets coincide -> TRUE then it is  OK
fleets_boolean <- compare(fleets)
# - both checks together
vector_boolean <- c("slag_ar_equal"=slag_ar_boolean, "fleets_equal"=fleets_boolean, "period_overlap"=period_boolean)
#return(vector_boolean)
# 	msg<-ifelse(vector_boolean[1] ,
# 		  ifelse(vector_boolean[2],
# 		  	  ifelse(vector_boolean[3],print("\nOverlap in period chosen\n"),print("")),
# 		  	   print("\nFleets are not identical\n")),print("\nSlag og/ella ár eru ikki eins\n"))
msg<-if(vector_boolean[1])
{
if(vector_boolean[2])
{
if(vector_boolean[3])
{
source("combine_fleets_interactive_check_msg3.R")#cat("\nOverlap in period chosen\n\n")
} else cat("OK")
} else source("combine_fleets_interactive_check_msg2.R")#cat("\nFleets are not identical\n\n")
} else source("combine_fleets_interactive_check_msg1.R")#cat("\nSlag og/ella ár eru ikki eins\n\n")
#return(msg)
}
comment(combine_fleets_interactive_check) <- "The first two components need to be TRUE. If third (period_overlap) is TRUE then need to check
the chosen period because of overlapping"
combine_fleets_interactive_check(file.names.ja.res)
combine_fleets_interactive_check(test)
combine_fleets_interactive_check(test1)
combine_fleets_interactive_check(file.names.ja.res)
combine_fleets_interactive_check(test)
combine_fleets_interactive_check(test1)
test1
test2<-test1
test2[2]<-"res_TO_2014_jun_dec_19_21.txt"
test2
combine_fleets_interactive_check(test2)
combine_fleets_interactive_check <- function(files_to_combine)
{
# - function to compare one element in a vector with the rest
#compare <- function(v) all(sapply(as.list(v[-1]), FUN=function(z) {identical(z, v[1])}))
slag_ar <- substring(files_to_combine, 5, 11)
period  <- substring(files_to_combine, 13, 19)
fleets  <- substring(files_to_combine, 21, 150) ; fleets <- gsub(".txt", "", fleets)
# - check if species and year coincide -> TRUE then it is OK
slag_ar_boolean <- compare(slag_ar)
# - check if time period (months) overlap -> TRUE then it is NOT OK
list_seq_months <- lapply(as.list(period), function(x) seq(mon_df[mon_df$mon_substr == substring(x, 1, 3), "mon_tal"]
, mon_df[mon_df$mon_substr == substring(x, 5, 7), "mon_tal"]))
period_boolean <- any(diff(sort(unlist(list_seq_months))) %in% 0)
# - check if fleets coincide -> TRUE then it is  OK
fleets_boolean <- compare(fleets)
# - both checks together
vector_boolean <- c("slag_ar_equal"=slag_ar_boolean, "fleets_equal"=fleets_boolean, "period_overlap"=period_boolean)
#return(vector_boolean)
# 	msg<-ifelse(vector_boolean[1] ,
# 		  ifelse(vector_boolean[2],
# 		  	  ifelse(vector_boolean[3],print("\nOverlap in period chosen\n"),print("")),
# 		  	   print("\nFleets are not identical\n")),print("\nSlag og/ella ár eru ikki eins\n"))
msg<-if(vector_boolean[1])
{
if(vector_boolean[2])
{
if(vector_boolean[3])
{
source("combine_fleets_interactive_check_msg3.R")#cat("\nOverlap in period chosen\n\n")
} else cat("")
} else source("combine_fleets_interactive_check_msg2.R")#cat("\nFleets are not identical\n\n")
} else source("combine_fleets_interactive_check_msg1.R")#cat("\nSlag og/ella ár eru ikki eins\n\n")
#return(msg)
}
comment(combine_fleets_interactive_check) <- "The first two components need to be TRUE. If third (period_overlap) is TRUE then need to check
the chosen period because of overlapping"
combine_fleets_interactive_check(file.names.ja.res)
combine_fleets_interactive_check(test)
combine_fleets_interactive_check(test1)
combine_fleets_interactive_check(test2)
source("combine_fleets_interactive_check.R", echo=T, encoding=myencoding)
source("combine_fleets_interactive_check.R", echo=T, encoding=myencoding)
file.names.no.res
file.names.ja.res
source("combine_fleets_interactive_check.R", echo=T, encoding=myencoding)
source("interactive.R")
source("interactive.R")
source("combine_fleets_interactive_check.R", echo=T, encoding=myencoding)
source("combine_fleets_interactive_check.R", echo=T, encoding=myencoding)
args(combine_fleets_interactive_check)
combine_fleets_interactive_check <- function(files_to_combine)
{
# - function to compare one element in a vector with the rest
#compare <- function(v) all(sapply(as.list(v[-1]), FUN=function(z) {identical(z, v[1])}))
slag_ar <- substring(files_to_combine, 5, 11)
period  <- substring(files_to_combine, 13, 19)
fleets  <- substring(files_to_combine, 21, 150) ; fleets <- gsub(".txt", "", fleets)
# - check if species and year coincide -> TRUE then it is OK
slag_ar_boolean <- compare(slag_ar)
# - check if time period (months) overlap -> TRUE then it is NOT OK
list_seq_months <- lapply(as.list(period), function(x) seq(mon_df[mon_df$mon_substr == substring(x, 1, 3), "mon_tal"]
, mon_df[mon_df$mon_substr == substring(x, 5, 7), "mon_tal"]))
period_boolean <- any(diff(sort(unlist(list_seq_months))) %in% 0)
# - check if fleets coincide -> TRUE then it is  OK
fleets_boolean <- compare(fleets)
# - both checks together
vector_boolean <- c("slag_ar_equal"=slag_ar_boolean, "fleets_equal"=fleets_boolean, "period_overlap"=period_boolean)
#return(vector_boolean)
# 	msg<-ifelse(vector_boolean[1] ,
# 		  ifelse(vector_boolean[2],
# 		  	  ifelse(vector_boolean[3],print("\nOverlap in period chosen\n"),print("")),
# 		  	   print("\nFleets are not identical\n")),print("\nSlag og/ella ár eru ikki eins\n"))
msg<-if(vector_boolean[1])
{
if(vector_boolean[2])
{
if(vector_boolean[3])
{
source("combine_fleets_interactive_check_msg3.R")#cat("\nOverlap in period chosen\n\n")
} else print("")
} else source("combine_fleets_interactive_check_msg2.R")#cat("\nFleets are not identical\n\n")
} else source("combine_fleets_interactive_check_msg1.R")#cat("\nSlag og/ella ár eru ikki eins\n\n")
return(msg)
}
comment(combine_fleets_interactive_check) <- "The first two components need to be TRUE. If third (period_overlap) is TRUE then need to check
the chosen period because of overlapping"
combine_fleets_interactive_check(file.names.ja.res)
source("combine_fleets_interactive_check.R", echo=T, encoding=myencoding)
combine_fleets_interactive_check(file.names.ja.res)
file.names.ja.res
combine_fleets_interactive_check <- function(files_to_combine)
{
# - function to compare one element in a vector with the rest
#compare <- function(v) all(sapply(as.list(v[-1]), FUN=function(z) {identical(z, v[1])}))
slag_ar <- substring(files_to_combine, 5, 11)
period  <- substring(files_to_combine, 13, 19)
fleets  <- substring(files_to_combine, 21, 150) ; fleets <- gsub(".txt", "", fleets)
# - check if species and year coincide -> TRUE then it is OK
slag_ar_boolean <- compare(slag_ar)
# - check if time period (months) overlap -> TRUE then it is NOT OK
list_seq_months <- lapply(as.list(period), function(x) seq(mon_df[mon_df$mon_substr == substring(x, 1, 3), "mon_tal"]
, mon_df[mon_df$mon_substr == substring(x, 5, 7), "mon_tal"]))
period_boolean <- any(diff(sort(unlist(list_seq_months))) %in% 0)
# - check if fleets coincide -> TRUE then it is  OK
fleets_boolean <- compare(fleets)
# - both checks together
vector_boolean <- c("slag_ar_equal"=slag_ar_boolean, "fleets_equal"=fleets_boolean, "period_overlap"=period_boolean)
#return(vector_boolean)
# 	msg<-ifelse(vector_boolean[1] ,
# 		  ifelse(vector_boolean[2],
# 		  	  ifelse(vector_boolean[3],print("\nOverlap in period chosen\n"),print("")),
# 		  	   print("\nFleets are not identical\n")),print("\nSlag og/ella ár eru ikki eins\n"))
if(vector_boolean[1])
{
if(vector_boolean[2])
{
if(vector_boolean[3])
{
msg <- "Overlap in period chosen" ; source("combine_fleets_interactive_check_msg3.R")#cat("\nOverlap in period chosen\n\n")
} else msg <- ""
} else msg <- "Fleets are not identical" ; source("combine_fleets_interactive_check_msg2.R")#cat("\nFleets are not identical\n\n")
} else msg <- "Slag og/ella ár eru ikki eins" ; source("combine_fleets_interactive_check_msg1.R")#cat("\nSlag og/ella ár eru ikki eins\n\n")
return(msg)
}
comment(combine_fleets_interactive_check) <- "The first two components need to be TRUE. If third (period_overlap) is TRUE then need to check
the chosen period because of overlapping"
combine_fleets_interactive_check(file.names.ja.res)
combine_fleets_interactive_check(test)
combine_fleets_interactive_check(test1)
combine_fleets_interactive_check(test2)
test2
MSG <- source("combine_fleets_interactive_check.R", echo=T, encoding=myencoding)
MSG
MSG$value
class(MSG$value)
test2
test1
source("interactive.R")
source("interactive.R")
file.names.ja.res
source("interactive.R")
source("interactive.R")
file.names.ja.res
source("interactive.R")
source("interactive.R")
MSG$value
MSG <- combine_fleets_interactive_check(file.names.ja.res)
MSG
file.names.ja.res
combine_fleets_interactive_check
MSG
MSG$value!=""
MSG
msg
?assign
source("interactive.R")
msg
file.names.ja.res
combine_fleets_interactive_check(file.names.ja.res)
file.names.ja.res
rm(list=ls())
source("interactive.R")
rm(list=ls())
source("interactive.R")
year_yvirlit
summary
rm(list=ls())
source("interactive.R")
fleets
ages.l
ages
rm(list=ls())
source("interactive.R")
ls()
ls()
structure(1:5, comment = "my attribute")
?structure
comment(structure(1:5, comment = "my attribute"))
f1 <- factor(letters)
f1
levels(f1) <- rev(levels(f1))
f1
source("interactive.R")
ls(pattern="res*")
ls(pattern="res_UP_*")
source("interactive.R")
ls(pattern="res_*")
res_TO_2014_jan_dec_19_20"
res_TO_2014_jan_dec_19_20
ages
ages.l
ac(ages.l+1)
source("interactive.R")
ls(pattern="res_UP_*")
Filters
species_name
year
time_period
fleets
rm(list=ls())
source("interactive.R")
ls()
fleets
rm(list=ls())
source("interactive.R")
ls()
res_UP_2014_jan_dec_20_23_3
rm(list=ls())
source("interactive.R")
ls()
res_UP_2014_jun_dec_20
source("interactive.R")
ANSWER
source("interactive.R")
source("interactive.R")
source("interactive.R")
file.names.ja.res
res.files.choose
combine_fleets_interactive_check(file.names.ja.res)
combine_fleets_interactive_check <- function(files_to_combine)
{
# - function to compare one element in a vector with the rest
#compare <- function(v) all(sapply(as.list(v[-1]), FUN=function(z) {identical(z, v[1])}))
slag_ar <- substring(files_to_combine, 5, 11)
period  <- substring(files_to_combine, 13, 19)
fleets  <- substring(files_to_combine, 21, 150) ; fleets <- gsub(".txt", "", fleets)
# - check if species and year coincide -> TRUE then it is OK
slag_ar_boolean <- compare(slag_ar)
# - check if time period (months) overlap -> TRUE then it is NOT OK
list_seq_months <- lapply(as.list(period), function(x) seq(mon_df[mon_df$mon_substr == substring(x, 1, 3), "mon_tal"]
, mon_df[mon_df$mon_substr == substring(x, 5, 7), "mon_tal"]))
period_boolean <- any(diff(sort(unlist(list_seq_months))) %in% 0)
# - check if fleets coincide -> TRUE then it is  OK
fleets_boolean <- compare(fleets)
# - both checks together
vector_boolean <- c("slag_ar_equal"=slag_ar_boolean, "fleets_equal"=fleets_boolean, "period_overlap"=period_boolean)
#return(vector_boolean)
# 	msg<-ifelse(vector_boolean[1] ,
# 		  ifelse(vector_boolean[2],
# 		  	  ifelse(vector_boolean[3],print("\nOverlap in period chosen\n"),print("")),
# 		  	   print("\nFleets are not identical\n")),print("\nSlag og/ella ár eru ikki eins\n"))
vector_boolean
}
combine_fleets_interactive_check(file.names.ja.res)
combine_fleets_interactive_check <- function(files_to_combine)
{
# - function to compare one element in a vector with the rest
#compare <- function(v) all(sapply(as.list(v[-1]), FUN=function(z) {identical(z, v[1])}))
slag_ar <- substring(files_to_combine, 5, 11)
period  <- substring(files_to_combine, 13, 19)
fleets  <- substring(files_to_combine, 21, 150) ; fleets <- gsub(".txt", "", fleets)
# - check if species and year coincide -> TRUE then it is OK
slag_ar_boolean <- compare(slag_ar)
# - check if time period (months) overlap -> TRUE then it is NOT OK
list_seq_months <- lapply(as.list(period), function(x) seq(mon_df[mon_df$mon_substr == substring(x, 1, 3), "mon_tal"]
, mon_df[mon_df$mon_substr == substring(x, 5, 7), "mon_tal"]))
period_boolean <- any(diff(sort(unlist(list_seq_months))) %in% 0)
# - check if fleets coincide -> TRUE then it is  OK
fleets_boolean <- compare(fleets)
# - both checks together
vector_boolean <- c("slag_ar_equal"=slag_ar_boolean, "fleets_equal"=fleets_boolean, "period_overlap"=period_boolean)
#return(vector_boolean)
# 	msg<-ifelse(vector_boolean[1] ,
# 		  ifelse(vector_boolean[2],
# 		  	  ifelse(vector_boolean[3],print("\nOverlap in period chosen\n"),print("")),
# 		  	   print("\nFleets are not identical\n")),print("\nSlag og/ella ár eru ikki eins\n"))
class(vector_boolean)
}
combine_fleets_interactive_check(file.names.ja.res)
msg
combine_fleets_interactive_check <- function(files_to_combine)
{
# - function to compare one element in a vector with the rest
#compare <- function(v) all(sapply(as.list(v[-1]), FUN=function(z) {identical(z, v[1])}))
slag_ar <- substring(files_to_combine, 5, 11)
period  <- substring(files_to_combine, 13, 19)
fleets  <- substring(files_to_combine, 21, 150) ; fleets <- gsub(".txt", "", fleets)
# - check if species and year coincide -> TRUE then it is OK
slag_ar_boolean <- compare(slag_ar)
# - check if time period (months) overlap -> TRUE then it is NOT OK
list_seq_months <- lapply(as.list(period), function(x) seq(mon_df[mon_df$mon_substr == substring(x, 1, 3), "mon_tal"]
, mon_df[mon_df$mon_substr == substring(x, 5, 7), "mon_tal"]))
period_boolean <- any(diff(sort(unlist(list_seq_months))) %in% 0)
# - check if fleets coincide -> TRUE then it is  OK
fleets_boolean <- compare(fleets)
# - both checks together
vector_boolean <- c("slag_ar_equal"=slag_ar_boolean, "fleets_equal"=fleets_boolean, "period_overlap"=period_boolean)
#return(vector_boolean)
# 	msg<-ifelse(vector_boolean[1] ,
# 		  ifelse(vector_boolean[2],
# 		  	  ifelse(vector_boolean[3],print("\nOverlap in period chosen\n"),print("")),
# 		  	   print("\nFleets are not identical\n")),print("\nSlag og/ella ár eru ikki eins\n"))
if(vector_boolean[1])
{
if(vector_boolean[2])
{
if(vector_boolean[3])
{
{msg <- "Overlap in period chosen" ; source("combine_fleets_interactive_check_msg3.R")}#cat("\nOverlap in period chosen\n\n")
} else msg <- ""
} else {msg <- "Fleets are not identical" ; source("combine_fleets_interactive_check_msg2.R")}#cat("\nFleets are not identical\n\n")
} else {msg <- "Slag og/ella ár eru ikki eins" ; source("combine_fleets_interactive_check_msg1.R")}#cat("\nSlag og/ella ár eru ikki eins\n\n")
assign("msg", msg, envir = .GlobalEnv)
}
combine_fleets_interactive_check(file.names.ja.res)
combine_fleets_interactive_check(file.names.ja.res)
sink()
combine_fleets_interactive_check <- function(files_to_combine)
{
# - function to compare one element in a vector with the rest
#compare <- function(v) all(sapply(as.list(v[-1]), FUN=function(z) {identical(z, v[1])}))
slag_ar <- substring(files_to_combine, 5, 11)
period  <- substring(files_to_combine, 13, 19)
fleets  <- substring(files_to_combine, 21, 150) ; fleets <- gsub(".txt", "", fleets)
# - check if species and year coincide -> TRUE then it is OK
slag_ar_boolean <- compare(slag_ar)
# - check if time period (months) overlap -> TRUE then it is NOT OK
list_seq_months <- lapply(as.list(period), function(x) seq(mon_df[mon_df$mon_substr == substring(x, 1, 3), "mon_tal"]
, mon_df[mon_df$mon_substr == substring(x, 5, 7), "mon_tal"]))
period_boolean <- any(diff(sort(unlist(list_seq_months))) %in% 0)
# - check if fleets coincide -> TRUE then it is  OK
fleets_boolean <- compare(fleets)
# - both checks together
vector_boolean <- c("slag_ar_equal"=slag_ar_boolean, "fleets_equal"=fleets_boolean, "period_overlap"=period_boolean)
#return(vector_boolean)
# 	msg<-ifelse(vector_boolean[1] ,
# 		  ifelse(vector_boolean[2],
# 		  	  ifelse(vector_boolean[3],print("\nOverlap in period chosen\n"),print("")),
# 		  	   print("\nFleets are not identical\n")),print("\nSlag og/ella ár eru ikki eins\n"))
if(vector_boolean[1])
{
if(vector_boolean[2])
{
if(vector_boolean[3])
{
{msg <- "Overlap in period chosen" ; source("combine_fleets_interactive_check_msg3.R")}#cat("\nOverlap in period chosen\n\n")
} else msg <- ""
} else {msg <- "Fleets are not identical" ; source("combine_fleets_interactive_check_msg2.R")}#cat("\nFleets are not identical\n\n")
} else {msg <- "Slag og/ella ár eru ikki eins" ; source("combine_fleets_interactive_check_msg1.R")}#cat("\nSlag og/ella ár eru ikki eins\n\n")
assign("msg", msg, envir = .GlobalEnv)
}
combine_fleets_interactive_check(file.names.ja.res)
file.names.ja.res
source("interactive.R")
source("interactive.R")
source("interactive.R")
source("interactive.R")
source("interactive.R")
source("interactive.R")
ANSWER
?on.exit
source("menu_option.R",verbose=T,echo=T)
source("menu_option.R",verbose=T,echo=T)
source("menu_option.R",echo=T)
source("menu_option.R")
source("menu_option.R")
source("menu_option.R")
source("interactive.R")
source("interactive.R")
msg
ANSWER
more_res
?capture.output
glmout <- capture.output(example(glm))
glmout[1:5]
glmout
library(RODBC)
conn <- odbcConnect("BASTA","luisr","juanayzakarias")
alkAll <- sqlQuery(conn,"select a.slagkoda, a.drift, a.oeki, a.arma, b.bolknr, b.aldur, b.tal
FROM bpaldur b, bsyni a
WHERE
a.synnr=b.synnr and a.arma > 1400 and a.arma < 1413
and a.slagkoda in ('HY') and a.oeki in ('VB1')
ORDER by a.arma, b.bolknr, b.aldur")
alkAll
head(alkAll)
unique(alkAll[,"ARMA"])
